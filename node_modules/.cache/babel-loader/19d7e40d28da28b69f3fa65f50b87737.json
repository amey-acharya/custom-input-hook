{"ast":null,"code":"var _jsxFileName = \"/Users/ameyacharya/Desktop/assignment/assignment11/src/components/SimpleInput.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { useRef } from \"react\";\nimport { useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SimpleInput = props => {\n  _s();\n\n  const [enteredName, setEnteredName] = useState('');\n  const [enteredNameIsValid, setEnteredNameIsValid] = useState(false);\n  const [enteredNameTouched, setEnteredNameTouched] = useState(false);\n\n  const changeInputHandler = event => {\n    setEnteredName(event.target.value);\n    console.log('EnteredName:', enteredName);\n\n    if (enteredName.trim() === '') {\n      setEnteredNameIsValid(false);\n      return;\n    }\n\n    setEnteredNameIsValid(true);\n    console.log('Form Submittion:', enteredName);\n  };\n\n  const nameInputBlurHandler = () => {\n    setEnteredNameTouched(true);\n\n    if (enteredName.trim() === '') {\n      setEnteredNameIsValid(false);\n      return;\n    }\n\n    setEnteredNameIsValid(true);\n    console.log('Form Submittion:', enteredName);\n  };\n\n  const formSubmissionHandler = event => {\n    event.preventDefault();\n    setEnteredNameTouched(true);\n\n    if (enteredName.trim() === '') {\n      setEnteredNameIsValid(false);\n      return;\n    }\n\n    setEnteredNameIsValid(true);\n    console.log('Form Submittion:', enteredName);\n    setEnteredName('');\n  };\n\n  const nameInputIsInvalid = !enteredNameIsValid && enteredNameTouched;\n  const nameInputClasses = nameInputIsInvalid ? 'form-control invalid' : 'form-control';\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: formSubmissionHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: nameInputClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Your Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        onChange: changeInputHandler,\n        onBlur: nameInputBlurHandler,\n        value: enteredName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), nameInputIsInvalid && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-text\",\n        children: \"Entered Name isn't valid.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 32\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SimpleInput, \"DhW9eRMxDIw4L/X6uY1c88opdf0=\");\n\n_c = SimpleInput;\nexport default SimpleInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"SimpleInput\");","map":{"version":3,"names":["useState","useRef","useEffect","SimpleInput","props","enteredName","setEnteredName","enteredNameIsValid","setEnteredNameIsValid","enteredNameTouched","setEnteredNameTouched","changeInputHandler","event","target","value","console","log","trim","nameInputBlurHandler","formSubmissionHandler","preventDefault","nameInputIsInvalid","nameInputClasses"],"sources":["/Users/ameyacharya/Desktop/assignment/assignment11/src/components/SimpleInput.js"],"sourcesContent":["import { useState } from \"react\";\nimport { useRef } from \"react\";\nimport { useEffect } from \"react\";\n\nconst SimpleInput = (props) => {\n\n  const [enteredName, setEnteredName] = useState('')\n  const [enteredNameIsValid, setEnteredNameIsValid] = useState(false)\n  const [enteredNameTouched, setEnteredNameTouched] = useState(false)\n\n  \n  const changeInputHandler = event => {\n    setEnteredName(event.target.value)\n    console.log('EnteredName:', enteredName)\n\n    if (enteredName.trim() === '') {\n      setEnteredNameIsValid(false)\n      return;\n    }\n    setEnteredNameIsValid(true)\n    console.log('Form Submittion:', enteredName)\n\n  }\n\n  const nameInputBlurHandler = () => {\n    setEnteredNameTouched(true)\n\n    if (enteredName.trim() === '') {\n      setEnteredNameIsValid(false)\n      return;\n    }\n    setEnteredNameIsValid(true)\n    console.log('Form Submittion:', enteredName)\n  }\n  \n  const formSubmissionHandler = event => {\n    event.preventDefault();\n    setEnteredNameTouched(true)\n    if (enteredName.trim() === '') {\n      setEnteredNameIsValid(false)\n      return;\n    }\n    setEnteredNameIsValid(true)\n    console.log('Form Submittion:', enteredName)\n    setEnteredName('')\n\n  }\n  const nameInputIsInvalid = !enteredNameIsValid && enteredNameTouched;\n  const nameInputClasses = nameInputIsInvalid ? 'form-control invalid' : 'form-control';\n  return (\n    <form onSubmit={formSubmissionHandler}>\n      <div className={nameInputClasses}>\n        <label htmlFor='name'>Your Name</label>\n        <input type='text' id='name' onChange={changeInputHandler} onBlur={nameInputBlurHandler} value={enteredName}/>\n        {nameInputIsInvalid && <p className=\"error-text\">Entered Name isn't valid.</p>}\n      </div>\n      <div className=\"form-actions\">\n        <button type=\"submit\">Submit</button>\n      </div>\n    </form>\n  );\n};\n\nexport default SimpleInput;\n"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,MAAT,QAAuB,OAAvB;AACA,SAASC,SAAT,QAA0B,OAA1B;;;AAEA,MAAMC,WAAW,GAAIC,KAAD,IAAW;EAAA;;EAE7B,MAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCN,QAAQ,CAAC,EAAD,CAA9C;EACA,MAAM,CAACO,kBAAD,EAAqBC,qBAArB,IAA8CR,QAAQ,CAAC,KAAD,CAA5D;EACA,MAAM,CAACS,kBAAD,EAAqBC,qBAArB,IAA8CV,QAAQ,CAAC,KAAD,CAA5D;;EAGA,MAAMW,kBAAkB,GAAGC,KAAK,IAAI;IAClCN,cAAc,CAACM,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAd;IACAC,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BX,WAA5B;;IAEA,IAAIA,WAAW,CAACY,IAAZ,OAAuB,EAA3B,EAA+B;MAC7BT,qBAAqB,CAAC,KAAD,CAArB;MACA;IACD;;IACDA,qBAAqB,CAAC,IAAD,CAArB;IACAO,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgCX,WAAhC;EAED,CAXD;;EAaA,MAAMa,oBAAoB,GAAG,MAAM;IACjCR,qBAAqB,CAAC,IAAD,CAArB;;IAEA,IAAIL,WAAW,CAACY,IAAZ,OAAuB,EAA3B,EAA+B;MAC7BT,qBAAqB,CAAC,KAAD,CAArB;MACA;IACD;;IACDA,qBAAqB,CAAC,IAAD,CAArB;IACAO,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgCX,WAAhC;EACD,CATD;;EAWA,MAAMc,qBAAqB,GAAGP,KAAK,IAAI;IACrCA,KAAK,CAACQ,cAAN;IACAV,qBAAqB,CAAC,IAAD,CAArB;;IACA,IAAIL,WAAW,CAACY,IAAZ,OAAuB,EAA3B,EAA+B;MAC7BT,qBAAqB,CAAC,KAAD,CAArB;MACA;IACD;;IACDA,qBAAqB,CAAC,IAAD,CAArB;IACAO,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgCX,WAAhC;IACAC,cAAc,CAAC,EAAD,CAAd;EAED,CAXD;;EAYA,MAAMe,kBAAkB,GAAG,CAACd,kBAAD,IAAuBE,kBAAlD;EACA,MAAMa,gBAAgB,GAAGD,kBAAkB,GAAG,sBAAH,GAA4B,cAAvE;EACA,oBACE;IAAM,QAAQ,EAAEF,qBAAhB;IAAA,wBACE;MAAK,SAAS,EAAEG,gBAAhB;MAAA,wBACE;QAAO,OAAO,EAAC,MAAf;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,eAEE;QAAO,IAAI,EAAC,MAAZ;QAAmB,EAAE,EAAC,MAAtB;QAA6B,QAAQ,EAAEX,kBAAvC;QAA2D,MAAM,EAAEO,oBAAnE;QAAyF,KAAK,EAAEb;MAAhG;QAAA;QAAA;QAAA;MAAA,QAFF,EAGGgB,kBAAkB,iBAAI;QAAG,SAAS,EAAC,YAAb;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAHzB;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAME;MAAK,SAAS,EAAC,cAAf;MAAA,uBACE;QAAQ,IAAI,EAAC,QAAb;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QANF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAYD,CAzDD;;GAAMlB,W;;KAAAA,W;AA2DN,eAAeA,WAAf"},"metadata":{},"sourceType":"module"}