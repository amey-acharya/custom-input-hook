{"ast":null,"code":"var _jsxFileName = \"/Users/ameyacharya/Desktop/assignment/assignment11/src/components/SimpleInput.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { useEffect } from \"react\";\nimport useInput from \"../hooks/use-input\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SimpleInput = props => {\n  _s();\n\n  const regex = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\n  const [enteredEmail, setEnteredEmail] = useState(\"\");\n  const [emailInputIsTouched, setEmailInputIsTouched] = useState(false);\n  const [formIsValid, setFormIsValid] = useState(false);\n  const enteredEmailIsInvalid = enteredEmail.match(regex) == null;\n  const enteredEmailIsValid = !(enteredEmailIsInvalid && emailInputIsTouched);\n  console.log(\"email: \", enteredEmailIsValid);\n  console.log(\"name: \", enteredNameIsValid);\n  console.log(\"form: \", formIsValid);\n  const {\n    value: enteredName,\n    hasError: nameInputHasError,\n    InputChangeHandler: nameChangeHandler,\n    inputBlurHandler: nameBlurHandler\n  } = useInput(value => value.trim().length == 0);\n  useEffect(() => {\n    if (enteredNameIsValid && enteredEmailIsValid) {\n      setFormIsValid(true);\n    } else {\n      setFormIsValid(false);\n    }\n  }, [enteredEmail, enteredName]);\n\n  const nameInputChangeHandler = event => {\n    setNameInputIsTouched(true);\n    setEnteredName(event.target.value);\n  };\n\n  const emailInputChangeHandler = event => {\n    setEmailInputIsTouched(true);\n    setEnteredEmail(event.target.value);\n  };\n\n  const emailBlurHandler = () => {\n    setEmailInputIsTouched(true);\n  };\n\n  const nameInputBlurHandler = () => {\n    setNameInputIsTouched(true);\n  };\n\n  const submitFormHandler = event => {\n    event.preventDefault();\n    setNameInputIsTouched(true);\n    setEmailInputIsTouched(true);\n\n    if (formIsValid) {\n      console.log(enteredName);\n      console.log(enteredEmail);\n      console.log(formIsValid);\n      setEnteredName(\"\");\n      setEnteredEmail(\"\");\n      setNameInputIsTouched(false);\n      setEmailInputIsTouched(false);\n      setFormIsValid(false);\n    } else {\n      return;\n    }\n  };\n\n  const className = enteredNameIsValid ? \"form-control\" : \"form-control invalid\";\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: className,\n    onSubmit: submitFormHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Your Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        placeholder: \"Input Name\",\n        onChange: nameInputChangeHandler,\n        onBlur: nameInputBlurHandler,\n        value: enteredName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), !enteredNameIsValid && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-text\",\n        children: \"Entered Name isn't valid.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Your Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        placeholder: \"Input Email\",\n        onChange: emailInputChangeHandler,\n        onBlur: emailBlurHandler,\n        value: enteredEmail\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), !enteredEmailIsValid && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-text\",\n        children: \"Entered Email isn't valid.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        disabled: !formIsValid,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SimpleInput, \"Nxzj1t/Agpk2V1wjudQcES9zE4c=\", false, function () {\n  return [useInput];\n});\n\n_c = SimpleInput;\nexport default SimpleInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"SimpleInput\");","map":{"version":3,"names":["useState","useEffect","useInput","SimpleInput","props","regex","enteredEmail","setEnteredEmail","emailInputIsTouched","setEmailInputIsTouched","formIsValid","setFormIsValid","enteredEmailIsInvalid","match","enteredEmailIsValid","console","log","enteredNameIsValid","value","enteredName","hasError","nameInputHasError","InputChangeHandler","nameChangeHandler","inputBlurHandler","nameBlurHandler","trim","length","nameInputChangeHandler","event","setNameInputIsTouched","setEnteredName","target","emailInputChangeHandler","emailBlurHandler","nameInputBlurHandler","submitFormHandler","preventDefault","className"],"sources":["/Users/ameyacharya/Desktop/assignment/assignment11/src/components/SimpleInput.js"],"sourcesContent":["import { useState } from \"react\";\nimport { useEffect } from \"react\";\nimport useInput from \"../hooks/use-input\";\n\nconst SimpleInput = (props) => {\n  const regex = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\n\n  const [enteredEmail, setEnteredEmail] = useState(\"\");\n  const [emailInputIsTouched, setEmailInputIsTouched] = useState(false);\n  const [formIsValid, setFormIsValid] = useState(false);\n\n  const enteredEmailIsInvalid = enteredEmail.match(regex) == null;\n  const enteredEmailIsValid = !(enteredEmailIsInvalid && emailInputIsTouched);\n\n  console.log(\"email: \", enteredEmailIsValid);\n  console.log(\"name: \", enteredNameIsValid);\n  console.log(\"form: \", formIsValid);\n\n  const {\n    value: enteredName,\n    hasError: nameInputHasError,\n    InputChangeHandler: nameChangeHandler,\n    inputBlurHandler: nameBlurHandler,\n\n  } = useInput(value => value.trim().length == 0 )\n\n  useEffect(() => {\n    if (enteredNameIsValid && enteredEmailIsValid) {\n      setFormIsValid(true);\n    } else {\n      setFormIsValid(false);\n    }\n  }, [enteredEmail, enteredName]);\n\n  const nameInputChangeHandler = (event) => {\n    setNameInputIsTouched(true);\n    setEnteredName(event.target.value);\n  };\n\n  const emailInputChangeHandler = (event) => {\n    setEmailInputIsTouched(true);\n    setEnteredEmail(event.target.value);\n  };\n\n  const emailBlurHandler = () => {\n    setEmailInputIsTouched(true);\n  };\n\n  const nameInputBlurHandler = () => {\n    setNameInputIsTouched(true);\n  };\n\n  const submitFormHandler = (event) => {\n    event.preventDefault();\n    setNameInputIsTouched(true);\n    setEmailInputIsTouched(true);\n\n    if (formIsValid) {\n      console.log(enteredName);\n      console.log(enteredEmail);\n      console.log(formIsValid);\n      setEnteredName(\"\");\n      setEnteredEmail(\"\");\n      setNameInputIsTouched(false);\n      setEmailInputIsTouched(false);\n      setFormIsValid(false);\n    } else {\n      return;\n    }\n  };\n\n  const className = enteredNameIsValid\n    ? \"form-control\"\n    : \"form-control invalid\";\n  return (\n    <form className={className} onSubmit={submitFormHandler}>\n      <div>\n        <label htmlFor=\"name\">Your Name</label>\n        <input\n          type=\"text\"\n          id=\"name\"\n          placeholder=\"Input Name\"\n          onChange={nameInputChangeHandler}\n          onBlur={nameInputBlurHandler}\n          value={enteredName}\n        />\n        {!enteredNameIsValid && (\n          <p className=\"error-text\">Entered Name isn't valid.</p>\n        )}\n      </div>\n      <div>\n        <label htmlFor=\"name\">Your Email</label>\n        <input\n          type=\"text\"\n          id=\"name\"\n          placeholder=\"Input Email\"\n          onChange={emailInputChangeHandler}\n          onBlur={emailBlurHandler}\n          value={enteredEmail}\n        />\n        {!enteredEmailIsValid && (\n          <p className=\"error-text\">Entered Email isn't valid.</p>\n        )}\n      </div>\n      <div className=\"form-actions\">\n        <button type=\"submit\" disabled={!formIsValid}>Submit</button>\n      </div>\n    </form>\n  );\n};\n\nexport default SimpleInput;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}